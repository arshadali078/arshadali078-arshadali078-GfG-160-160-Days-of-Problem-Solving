#include <iostream>
#include <vector>
using namespace std;

int findPeakElement(const vector<int>& arr) {
    int n = arr.size();

    // Handle the edge case where the array has only one element
    if (n == 1) return 0;

    // Traverse the array to find a peak element
    for (int i = 0; i < n; ++i) {
        // Check if the current element is a peak element
        if ((i == 0 || arr[i] > arr[i - 1]) && 
            (i == n - 1 || arr[i] > arr[i + 1])) {
            return i; // Return the index of the peak element
        }
    }

    // This return is never reached for valid input due to constraints
    return -1;
}

int main() {
    vector<int> arr = {10, 20, 15, 2, 23, 90, 80};
    int peakIndex = findPeakElement(arr);

    // Verify and output result
    if (peakIndex != -1) {
        cout << "Peak element index: " << peakIndex << endl;
        cout << "Peak element value: " << arr[peakIndex] << endl;
    } else {
        cout << "No peak element found." << endl;
    }

    return 0;
}
